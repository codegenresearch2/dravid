import click\\nimport colorama\\nimport shutil\\n\\nMETADATA_FILE = 'drd.json'\\n\\n\\ndef print_error(message):\\n    click.echo(f"{colorama.Fore.RED}✘ {message}{colorama.Style.RESET_ALL}")\\n\\ndef print_success(message):\\n    click.echo(f"{colorama.Fore.GREEN}✔ {message}{colorama.Style.RESET_ALL}")\\n\\ndef print_info(message):\\n    click.echo(f"{colorama.Fore.YELLOW}ℹ {message}{colorama.Style.RESET_ALL}")\\n\\ndef print_warning(message):\\n    click.echo(f"{colorama.Fore.YELLOW}⚠ {message}{colorama.Style.RESET_ALL}")\\n\\ndef print_debug(message):\\n    click.echo(click.style(f"DEBUG: {message}", fg="cyan"))\\n\\ndef print_step(step_number, total_steps, message):\\n    click.echo(f"{colorama.Fore.CYAN}[{step_number}/{total_steps}] {message}{colorama.Style.RESET_ALL}")\\n\\ndef create_confirmation_box(message, action):\\n    box_width = len(message) + 4\\n    box_top = f"╔{'═' * box_width}╗"\\n    box_bottom = f"╚{'═' * box_width}╝"\\n    box_content = f"║  {message}  ║"\\n\\n    confirmation_box = f"\\n{colorama.Fore.YELLOW}{box_top}\\n║  {colorama.Back.RED}{colorama.Fore.WHITE}CONFIRMATION REQUIRED{colorama.Style.RESET_ALL}{colorama.Fore.YELLOW}  ║\\n{box_content}\\n╠{'═' * box_width}╣\\n║  Do you want to {action}?  ║\\n{box_bottom}{colorama.Style.RESET_ALL}"\\n    return confirmation_box\\n\\ndef print_command_details(commands):\\n    for index, cmd in enumerate(commands, start=1):\\n        cmd_type = cmd.get('type', 'Unknown')\\n        print_info(f"Command {index} - Type: {cmd_type}")\\n\\n        if cmd_type == 'shell':\\n            print_info(f"  Command: {cmd.get('command', 'N/A')}")\\n\\n        elif cmd_type == 'explanation':\\n            print_info(f"  Explanation: {cmd.get('content', 'N/A')}")\\n\\n        elif cmd_type == 'file':\\n            operation = cmd.get('operation', 'N/A')\\n            filename = cmd.get('filename', 'N/A')\\n            content_preview = cmd.get('content', 'N/A')\\n            if len(content_preview) > 50:\\n                content_preview = content_preview[:50] + "..."\\n            print_info(f"  Operation: {operation}")\\n            print_info(f"  Filename: {filename}")\\n            print_info(f"  Content: {content_preview}")\\n\\n        elif cmd_type == 'metadata':\\n            operation = cmd.get('operation', 'N/A')\\n            print_info(f"  Operation: {operation}")\\n            if operation == 'UPDATE_DEV_SERVER':\\n                print_info(f"  Start Command: {cmd.get('start_command', 'N/A')}")\\n                print_info(f"  Framework: {cmd.get('framework', 'N/A')}")\\n                print_info(f"  Language: {cmd.get('language', 'N/A')}")\\n            elif operation in ['UPDATE_FILE', 'UPDATE']:\\n                print_info(f"  Filename: {cmd.get('filename', 'N/A')}")\\n                print_info(f"  Language: {cmd.get('language', 'N/A')}")\\n                print_info(f"  Description: {cmd.get('description', 'N/A')}")\\n\\n        else:\\n            print_warning(f"  Unknown command type: {cmd_type}")