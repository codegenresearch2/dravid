import click\nimport colorama\nimport shutil\n\n# Import specific components from colorama\nfrom colorama import Fore, Style, Back\n\n# Define a function to print messages with indentation and color\ndef print_prompt(message, indent=0):\n    click.echo(f'{Style.BRIGHT}{Fore.YELLOW}{' ' '*indent}{message}{Style.RESET_ALL}')\n\n\ndef print_error(message):\n    click.echo(f'{Fore.RED}✘ {message}{Style.RESET_ALL}')\n\ndef print_success(message):\n    click.echo(f'{Fore.GREEN}✔ {message}{Style.RESET_ALL}')\n\ndef print_info(message, indent=0):\n    click.echo(f'{Fore.YELLOW}ℹ {Style.RESET_ALL}{' ' '*indent}{message}')\n\ndef print_warning(message):\n    click.echo(f'{Fore.YELLOW}⚠ {message}{Style.RESET_ALL}')\n\ndef print_debug(message):\n    click.echo(click.style(f'DEBUG: {message}', fg='cyan'))\n\ndef print_step(step_number, total_steps, message):\n    click.echo(f'{Fore.CYAN}[{step_number}/{total_steps}] {message}{Style.RESET_ALL}')\n\n\ndef create_confirmation_box(title, message, action):\n    terminal_width = shutil.get_terminal_size().columns\n    box_width = min(terminal_width, len(title) + 4) if terminal_width > 0 else len(title) + 4\n    box_top = f'╔{Style.BRIGHT}{Fore.YELLOW}{'=' * (box_width - 2)}╗'\n    box_bottom = f'╚{Style.BRIGHT}{Fore.YELLOW}{'=' * (box_width - 2)}╝'\n    box_content = f'║ {Style.BRIGHT}{Fore.YELLOW}{title.center(box_width - 4)} ║'\n    confirmation_box = f'\n{box_top}\n{box_content}\n{box_bottom}\n║ {Style.BRIGHT}{Fore.YELLOW}Do you want to {action}?{Style.RESET_ALL}  ║'\n    return confirmation_box\n\n# Additional functions to match the gold code\ndef print_command_details(commands):\n    for index, cmd in enumerate(commands, start=1):\n        cmd_type = cmd.get('type', 'Unknown')\n        print_info(f'Command {index} - Type: {cmd_type}')