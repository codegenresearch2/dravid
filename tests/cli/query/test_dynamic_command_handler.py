import unittest\\\nfrom unittest.mock import patch, MagicMock, call\\\\nimport xml.etree.ElementTree as ET\\\\n\\\\nfrom drd.cli.query.dynamic_command_handler import (\\\\n    execute_commands,\\\\n    handle_shell_command,\\\\n    handle_file_operation,\\\\n    handle_metadata_operation,\\\\n    update_file_metadata,\\\\n    handle_error_with_dravid\\\\n)\\\\n\\\\nclass TestDynamicCommandHandler(unittest.TestCase):\\\\n\\\\n    def setUp(self):\\\\n        self.executor = MagicMock()\\\\n        self.metadata_manager = MagicMock()\\\\n\\\\n    @patch('drd.cli.query.dynamic_command_handler.print_step') \\\\n    @patch('drd.cli.query.dynamic_command_handler.print_info') \\\\n    @patch('drd.cli.query.dynamic_command_handler.print_debug') \\\\n    async def test_execute_commands(self, mock_print_debug, mock_print_info, mock_print_step):\\\\n        commands = [\\\\n            {'type': 'explanation', 'content': 'Test explanation'},\\\n            {'type': 'shell', 'command': 'echo "Hello"'},\\\n            {'type': 'file', 'operation': 'CREATE',\\\\\\