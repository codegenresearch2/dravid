import unittest\\nimport os\\nimport json\\nfrom unittest.mock import patch, mock_open\\nfrom io import StringIO\\nfrom colorama import Fore, Style\\n\\nfrom drd.utils.utils import (\\n    print_error, \\n    print_success, \\n    print_info, \\n    print_warning, \\n    print_debug, \\n    print_step, \\n)\\\\\n\\nclass TestUtilityFunctions(unittest.TestCase):\\n\\n    def setUp(self):\\n        self.metadata = {\\n            "project_name": "Test Project",\\n            "version": "1.0.0"\\n        }\\n\\n    @patch('click.echo')\\n    def test_print_error(self, mock_echo):\\n        print_error("Test error message")\\n        mock_echo.assert_called_with(\\\\\\\n            f"{Fore.RED}✘ Test error message (Context: {os.getcwd()}){Style.RESET_ALL}")\\n\\n    @patch('click.echo')\\n    def test_print_success(self, mock_echo):\\n        print_success("Test success message")\\n        mock_echo.assert_called_with(\\\\\\\n            f"{Fore.GREEN}✔ Test success message{Style.RESET_ALL}")\\n\\n    @patch('click.echo')\\n    def test_print_info(self, mock_echo):\\n        print_info("Test info message")\\n        mock_echo.assert_called_with(\\\\\\\n            f"{Fore.YELLOW}ℹ Test info message{Style.RESET_ALL}")\\n\\n    @patch('click.echo')\\n    def test_print_warning(self, mock_echo):\\n        print_warning("Test warning message")\\n        mock_echo.assert_called_with(\\\\\\\n            f"{Fore.YELLOW}⚠ Test warning message{Style.RESET_ALL}")\\n\\n    @patch('click.echo')\\n    @patch('click.style')\\n    def test_print_debug(self, mock_style, mock_echo):\\n        print_debug("Test debug message")\\n        mock_style.assert_called_with("DEBUG: Test debug message", fg="cyan")\\n        mock_echo.assert_called_once()\\n\\n    @patch('click.echo')\\n    def test_print_step(self, mock_echo):\\n        print_step(1, 5, "Test step message")\\n        mock_echo.assert_called_with(\\\\\\\n            f"{Fore.CYAN}[1/5] Test step message{Style.RESET_ALL}")